ハッシュテーブルと双方向リストを使います。

まず、授業でも話していた通り、サイズがつねに X 個に保たれた <URL, Web ページ> のハッシュテーブルを作ります。
でも、これでは時系列は記憶されていないので、別のデー座構造を組み合わせる必要があります。

それを、私は双方向リストで考えました。
双方向リストには、キャッシュされた<URL, Webページ>ペアを格納します。
順番に入ってくるので、リストの先頭は最も最近アクセスされたもので、最後は最も古くアクセスされたものになります。
各ノードは対応する<URL, Webページ>ペアへのポインタを持ちます。

ハッシュテーブルには、今キャッシュに入ってるべき<URL, Web ページ>のペアが入っていて、新しく入ってくるURLがすでにキャッシュに存在しているかを確認します。
存在していたら、リストの先頭に移動させます。

URLが存在しない場合には、新しいノードを作成し、リンクリストの末尾のノードを削除し、対応するエントリをハッシュテーブルからも削除します。リンクリストの先頭に追加したり、ハッシュテーブルにも追加したりします。
キャッシュがいっぱい（X個）を超えたら、リンクリストの最後のノードを削除し、それをハッシュテーブルからも削除します。